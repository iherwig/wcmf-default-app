<?php
/*
 * Copyright (c) 2013 The Olympos Development Team.
 * 
 * http://sourceforge.net/projects/olympos/
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 */

/**
 * This file was generated by ChronosGenerator  from model.uml.
 * Manual modifications should be placed inside the protected regions.
 */
namespace app\src\model\wcmf;

use wcmf\lib\model\Node;

use wcmf\lib\i18n\Message;
use wcmf\lib\persistence\ObjectId;

/**
 * @class NMUserRole
 * NMUserRole description: 
 *
 * @author 
 * @version 1.0
 */
class NMUserRoleBase extends Node {

    /**
     * Constructor
     * @param oid ObjectId instance (optional)
     */
    public function __construct($oid=null) {
      if ($oid == null) {
        $oid = new ObjectId('NMUserRole');
    }
      parent::__construct($oid);
    }

    /**
     * @see PersistentObject::getObjectDisplayName()
     */
    public function getObjectDisplayName() {
      return Message::get("NMUserRole");
    }

    /**
     * @see PersistentObject::getObjectDescription()
     */
    public function getObjectDescription() {
      return Message::get("");
    }

    /**
     * @see PersistentObject::getValueDisplayName()
     */
    public function getValueDisplayName($name) {
      $displayName = $name;
      if ($name == 'fk_role_id') { $displayName = Message::get("fk_role_id"); }
      if ($name == 'fk_user_id') { $displayName = Message::get("fk_user_id"); }
      return Message::get($displayName);
    }

    /**
     * @see PersistentObject::getValueDescription()
     */
    public function getValueDescription($name) {
      $description = $name;
      if ($name == 'fk_role_id') { $description = Message::get(""); }
      if ($name == 'fk_user_id') { $description = Message::get(""); }
      return Message::get($description);
    }

    /**
     * Get the User instances in the User relation
     * @return Array of User instances
     */
    public function getUserList() {
      return $this->getValue('User');
    }

    /**
     * Set the User instances in the User relation
     * @param nodeList Array of User instances
     */
    public function setUserList(array $nodeList) {
      $this->setValue('User', null);
      foreach ($nodeList as $node) {
        $this->addNode($node, 'User');
      }
    }
    /**
     * Get the Role instances in the Role relation
     * @return Array of Role instances
     */
    public function getRoleList() {
      return $this->getValue('Role');
    }

    /**
     * Set the Role instances in the Role relation
     * @param nodeList Array of Role instances
     */
    public function setRoleList(array $nodeList) {
      $this->setValue('Role', null);
      foreach ($nodeList as $node) {
        $this->addNode($node, 'Role');
      }
    }
}
?>
